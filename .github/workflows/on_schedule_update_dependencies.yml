name: Update Dependencies

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 */10 * *" # every 10 days

jobs:
  update-dependencies:
    name: Update Dependencies
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]
        poetry-version: ["latest"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      - name: Update dependencies
        run: poetry update

      - name: Check for changes
        id: check_changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git checkout -b "update-dependencies"
            git add .
            git commit -m "Update dependencies"
            echo "changes=true" >> $GITHUB_ENV
          else
            echo "No changes detected."
            echo "changes=false" >> $GITHUB_ENV

      - name: Push changes
        if: env.changes == 'true'
        run: |
          git push --set-upstream origin update-dependencies

      - name: Create Pull Request
        if: env.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          branch: update-dependencies
          title: "Update dependencies"
          body: "This PR updates dependencies to their latest versions."
          draft: false

  merge-pull-request:
    name: Merge Pull Request
    needs: update-dependencies
    if: needs.update-dependencies.env.changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Wait for PR checks
        # Waits for all checks to pass in the created pull request
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: ${{ github.repository }}
          ref: "update-dependencies"

      - name: Squash and Merge PR
        # Automatically squash and merge the pull request
        uses: devops-infra/action-auto-merge@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          merge-method: squash

      - name: Delete branch
        # Deletes the temporary branch after the merge
        run: |
          git push origin --delete update-dependencies